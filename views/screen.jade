extends _layout

block style
    style.
        body {
            text-align: center;
        }
        ul, li {
            list-style: none;
        }
        #playground {
            margin: 30px auto;
            padding: 0;
        }
        #info {
            clear: both;
            padding: 20px;
        }
        .box {
            background-color: #eee;
            border: 2px solid;
            width: 70px;
            height: 70px;
            float: left;
            margin: 2px;
        }
        .base_on {
            border-color: blue;
        }
        .base_off {
            border-color: red;
        }
        .on {
            background-color: #33c;
        }
        .off {
            background-color: #c33;
        }

block content
    h1 Welcome Screen
    ul#playground
    #info

block script
    script.
        let sock = io(),
            state = 'open',
            playground = $('#playground'),
            infoBox = $('#info');
        sock.on('connect', () => {
            console.log('connect');
            sock.emit('iamscreen');
        });
        sock.on('map', data => {
            console.log('map', data);
            playground.html('');
            infoBox.html('');
            state = 'open';
            playground.css('width', data.config.col * 78);
            for(let i = 0, clas = ['box'], l = data.points.length; i < l; i++, clas = ['box']) {
                if(data.points[i] === 0) {
                    clas.push('base_off');
                } else {
                    clas.push('base_on');
                }
                playground.append(`<li id="box${i}" class="${clas.join(' ')}"></li>`);
            }
        });
        sock.on('players', data => {
            console.log('players', data);
        });
        sock.on('switch', data => {
            if(state === 'over') {
                console.log('Game Over.');
            } else {
                console.log('switch', data);
                $(`#box${data.index}`)
                    .removeClass('on off')
                    .addClass(data.value);
            }
        });
        sock.on('over', () => {
            state = 'over';
            console.log('SUCCESS!!!');
            infoBox.html('Success!!');
        });
